---
    name: ci
    on:
      push:
        branches:
          - master
    
    jobs:
      delete_previous_release:
        name: Delete previous Development Release
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
          - uses: actions/checkout@v4
          - run: gh release delete latest --cleanup-tag -y 
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      draft_release:
        name: Create Release
        runs-on: ubuntu-latest
        continue-on-error: false
        needs: delete_previous_release
        outputs:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
        steps:
          - uses: actions/checkout@v4
          - name: Create Release
            id: create_release
            uses: ncipollo/release-action@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              body: This is based on the latest commit.
              tag: latest
              name: "Development release"
              draft: false
              prerelease: true
    
      mxe64:
        name: Windows 64-bit (MXE Cross Build)
        runs-on: windows-latest
        defaults:
          run:
            shell: msys2 {0}
        continue-on-error: false
        needs: draft_release
        env:
          CFLAGS: -std=c11
          CXXFLAGS: -std=c++14
        steps:
          - uses: actions/checkout@v4
    
          - name: Setup MSYS2
            uses: msys2/setup-msys2@v2
            with:
              msystem: mingw64
              update: true
              install: mingw-w64-x86_64-ffmpeg mingw-w64-x86_64-pango mingw-w64-x86_64-rtmpdump mingw-w64-x86_64-glew mingw-w64-x86_64-SDL2 mingw-w64-x86_64-cmake mingw-w64-x86_64-nasm mingw-w64-x86_64-gcc mingw-w64-x86_64-upx mingw-w64-x86_64-7zip intltool mingw-w64-x86_64-libtool mingw-w64-x86_64-gperf mingw-w64-x86_64-nsis git 
    
          - name: Run MXE Build
            run: |
              cmake .
              ninja
              sed -i -e "s/Lightspark Team/The Lightspark Developers/g" CPackConfig.cmake
              ninja package
              mv -v Lightspark*exe Lightspark-v${{ github.ref }}-Installer-win64.exe
    
          - name: Upload Installer Release Asset
            uses: softprops/action-gh-release@v2
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: latest
              files: Lightspark-v${{ github.ref}}-Installer-win64.exe
    
      mxe32:
        name: Windows 32-bit
        runs-on: windows-latest
        defaults:
          run:
            shell: msys2 {0}
        continue-on-error: false
        needs: draft_release
        env:
          CFLAGS: -std=c11
          CXXFLAGS: -std=c++14
        steps:
          - uses: actions/checkout@v4
    
          - name: Setup MSYS2
            uses: msys2/setup-msys2@v2
            with:
              msystem: mingw64
              update: true
              install: mingw-w64-i686-ffmpeg mingw-w64-i686-pango mingw-w64-i686-rtmpdump mingw-w64-i686-glew mingw-w64-i686-SDL2 mingw-w64-i686-cmake mingw-w64-i686-nasm mingw-w64-i686-gcc mingw-w64-i686-upx mingw-w64-i686-7zip intltool mingw-w64-i686-libtool mingw-w64-i686-gperf mingw-w64-i686-nsis git 
    
          - name: Run MXE Build
            run: |
              cmake .
              ninja
              sed -i -e "s/Lightspark Team/The Lightspark Developers/g" CPackConfig.cmake
              ninja package
              mv -v Lightspark*exe Lightspark-v${{github.ref }}-Installer-win32.exe
    
          - name: Upload Installer Release Asset
            uses: softprops/action-gh-release@v2
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: latest
              files: Lightspark-v${{ github.ref }}-Installer-win32.exe
    
